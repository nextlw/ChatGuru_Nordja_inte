# Cloud Build Configuration para Ambiente de Teste
# Automatiza o build e deploy no Cloud Run

substitutions:
  _SERVICE_NAME: chatguru-middleware-test
  _REGION: southamerica-east1
  _IMAGE_NAME: chatguru-clickup-middleware-test

steps:
  # Step 1: Build da imagem Docker
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-f'
      - 'Dockerfile.test.simple'
      - '-t'
      - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest'
      - '.'
    timeout: '600s'

  # Step 2: Push da imagem para GCR
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}'
    timeout: '300s'

  # Step 3: Deploy no Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$COMMIT_SHA'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--cpu=1'
      - '--memory=512Mi'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--timeout=300'
      - '--concurrency=80'
      - '--service-account=$PROJECT_ID@appspot.gserviceaccount.com'
    timeout: '300s'

  # Step 4: Configurar variáveis de ambiente
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'services'
      - 'update'
      - '${_SERVICE_NAME}'
      - '--region=${_REGION}'
      - '--update-env-vars=RUST_ENV=test,IS_TEST_ENVIRONMENT=true,RUST_LOG=debug,PORT=8080,USE_CLOUD_TASKS=false'
    timeout: '120s'

# Configurações gerais
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

timeout: '1200s'

# Tags para identificação
tags:
  - 'test-environment'
  - 'chatguru-middleware'
  - 'cloud-run'